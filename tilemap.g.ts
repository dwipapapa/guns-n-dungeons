// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex`10001000050404040404040404060b0b0b0b0b0b010909090909090909030b0b0b0b0b0b01090a090909090909030b0b0b0b0b0b010909090909090909030b0b0b0b0b0b010909090909090909030b0b0b0b0b0b010909090909090909030b0b0b0b0b0b010909090909090909030b0b0b0b0b0b010909090909090909030b0b0b0b0b0b010909090909090909030b0b0b0b0b0b010909090909090909030b0b0b0b0b0b070202020202020202080b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tilePath4,sprites.castle.tilePath8,sprites.castle.tilePath6,sprites.castle.tilePath2,sprites.castle.tilePath1,sprites.castle.tilePath3,sprites.castle.tilePath7,sprites.castle.tilePath9,sprites.castle.tilePath5,myTiles.tile1,sprites.castle.tileGrass1], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex`28001e0007020b0202020202020202021c02020800000000000000000000000000000000000000000000000001090909090c0909090909090909090300000000000000000000000000000000000000000000000001090909090909090909090d0909090300000000000000000000000000000000000000000000000001090f0909090f09090c090909190903000000000000000000000000000000000000000000000000010909090909090909090912090909030000000000000000000000000000000000000000000000000109090909090c0909091212090909030000000000000000000000000000000000000000000000000109090c09111314141512090c09090300000000000000000000000000000000000000000000000001090909091116180917090909090903000000000000000000000000000000000000000000000000010909090911160909170909090909030000000000000000000000000000000000000000000000000109090d090909090c0909090909090202020202020202020800000000000000000000000000000001090909090909090909090909090c090909090909090909030000000000000000000000000000000109090910100c090919090909191909090909090d0909090300000000000000000000000000000001090f09091010090909090f1919190f09090c190909090903000000000000000000000000000000010909090c091010090909191919190909090909120909090300000000000000000000000000000001090a0909090910090919191919190c0909091212090909030000000000000000000000000000000604040404040404040109090c09111109091212090c0909030000000000000000000000000000000000000000000000000109090909110e0e09120909090909030000000000000000000000000000000000000000000000000109190909110e0909090909090909030000000000000000000000000000000000000000000000000109090d090909090c09090909090903000000000000000000000000000000000000000000000000010909090909091909190910100c09030000000000000000000000000000000000000000000000000109090910100c0909090d091009090300000000000000000000000000000000000000000000000001091909091010090919091919190903000000000000000000000000000000000000000000000000010909090c09101009090c191b19090300000000000000000000000000000000000000000000000001090a0909090910090909191919090300000000000000000000000000000000000000000000000006040404040404040404040404040405000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000000000000000001d`, img`
2222222222222222........................
2..............2........................
2..............2........................
2..............2........................
2..............2........................
2..............2........................
2.....2222.....2........................
2.....22.2.....2........................
2.....2..2.....2........................
2..............2222222222...............
2.......................2...............
2.......................2...............
2.......................2...............
2.......................2...............
2.......................2...............
2222222222..............2...............
.........2..............2...............
.........2..............2...............
.........2..............2...............
.........2..............2...............
.........2..............2...............
.........2..............2...............
.........2..............2...............
.........2..............2...............
.........2222222222222222...............
........................................
........................................
........................................
........................................
........................................
`, [myTiles.transparency16,sprites.dungeon.purpleOuterWest0,sprites.dungeon.purpleOuterNorth0,sprites.dungeon.purpleOuterEast1,sprites.dungeon.purpleOuterSouth1,sprites.dungeon.purpleOuterSouthWest,sprites.dungeon.purpleOuterSouthEast,sprites.dungeon.purpleOuterNorthWest,sprites.dungeon.purpleOuterNorthEast,sprites.dungeon.floorDark2,sprites.dungeon.floorDark5,sprites.dungeon.purpleOuterNorth1,sprites.dungeon.floorMixed,sprites.dungeon.floorDark3,sprites.dungeon.floorLightMoss,sprites.dungeon.floorDark1,sprites.dungeon.floorDark0,sprites.dungeon.floorLight1,sprites.dungeon.floorDarkDiamond,sprites.dungeon.greenOuterNorthWest,sprites.dungeon.greenOuterNorth0,sprites.dungeon.greenOuterNorthEast,sprites.dungeon.greenOuterWest0,sprites.dungeon.greenOuterEast0,sprites.dungeon.chestClosed,myTiles.tile2,myTiles.tile4,myTiles.tile5,sprites.dungeon.doorClosedNorth,sprites.dungeon.doorOpenNorth], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "Hole":
            case "tile1":return tile1;
            case "myTile0":
            case "tile3":return tile3;
            case "myTile":
            case "tile2":return tile2;
            case "myTile1":
            case "tile4":return tile4;
            case "myTile2":
            case "tile5":return tile5;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
